name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_DB_NAME: database1
  APP_DB_USERNAME: user1
  APP_DB_PASSWORD: ci45cd
  APP_DB_HOST: localhost
  APP_DB_PORT: 5432

jobs:
  build:
    name: Build, Test, and Push Docker Image
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: user1
          POSTGRES_PASSWORD: ci45cd
          POSTGRES_DB: database1
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user1 -d database1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Log in to DockerHub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE=fhhaglo/cicd_exc2_go
          GIT_SHA=$(git rev-parse --short HEAD)
          docker build -t $IMAGE:latest .
          docker tag $IMAGE:latest $IMAGE:$GIT_SHA
          docker push $IMAGE:latest
          docker push $IMAGE:$GIT_SHA

        
  sonarcloud:
    name: SonarCloud Code Analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for better analysis reporting

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}